{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALIENWARE\\\\Documents\\\\inventario-app\\\\src\\\\pages\\\\cotizacion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, getDocs, addDoc } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport CotizacionForm from '../components/CotizacionForm';\nimport TablaCotizaciones from '../components/TablaCotizaciones';\nimport PreviaCotizacion from '../components/PreviaCotizacion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nfunction CotizacionesContainer() {\n  _s();\n  const [cotizaciones, setCotizaciones] = useState([]);\n  const [mostrarFormulario, setMostrarFormulario] = useState(true);\n  const [mostrarPrevia, setMostrarPrevia] = useState(false);\n  const [cotizacionSeleccionada, setCotizacionSeleccionada] = useState(null);\n  const [clientes, setClientes] = useState([]);\n  const [numeroCotizacion, setNumeroCotizacion] = useState(null);\n  useEffect(() => {\n    obtenerCotizaciones();\n    obtenerClientes();\n    obtenerUltimoNumeroCotizacion();\n  }, []);\n\n  // Función para obtener el último número de cotización\n  const obtenerUltimoNumeroCotizacion = async () => {\n    try {\n      const cotizacionesRef = collection(db, 'cotizaciones');\n      const q = query(cotizacionesRef, orderBy('numeroCotizacion', 'desc'), limit(1));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        const ultimaCotizacion = doc.data();\n        setNumeroCotizacion(ultimaCotizacion.numeroCotizacion + 1); // Asignar el siguiente número de cotización\n      });\n    } catch (error) {\n      console.error('Error al obtener el último número de cotización:', error);\n    }\n  };\n  const obtenerCotizaciones = async () => {\n    try {\n      const cotizacionesSnapshot = await getDocs(collection(db, 'cotizaciones'));\n      const listaCotizaciones = cotizacionesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setCotizaciones(listaCotizaciones);\n    } catch (error) {\n      console.error('Error al obtener las cotizaciones:', error);\n    }\n  };\n  const obtenerClientes = async () => {\n    try {\n      const clientesSnapshot = await getDocs(collection(db, 'clientes'));\n      const listaClientes = clientesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setClientes(listaClientes);\n    } catch (error) {\n      console.error('Error al obtener los clientes:', error);\n    }\n  };\n  const guardarCotizacion = async cotizacionData => {\n    try {\n      if (!cotizacionData.cliente || !cotizacionData.asunto || !cotizacionData.fechaVencimiento || cotizacionData.productosSeleccionados.length === 0) {\n        MySwal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Todos los campos son obligatorios'\n        });\n        return;\n      }\n      const cliente = clientes.find(cliente => cliente.id === cotizacionData.cliente);\n      if (!cliente) {\n        console.error('Cliente no encontrado');\n        return;\n      }\n      const cotizacion = {\n        ...cotizacionData,\n        nombreCliente: cliente.empresa // Asignar el nombre del cliente en lugar de su ID\n      };\n      const docRef = await addDoc(collection(db, 'cotizaciones'), cotizacion);\n      console.log('Cotización guardada con ID: ', docRef.id);\n      obtenerCotizaciones();\n      setMostrarFormulario(false);\n    } catch (error) {\n      console.error('Error al guardar la cotización:', error);\n    }\n  };\n  const verPrevia = cotizacion => {\n    setCotizacionSeleccionada(cotizacion);\n    setMostrarPrevia(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mostrarFormulario ? /*#__PURE__*/_jsxDEV(CotizacionForm, {\n      guardarCotizacion: guardarCotizacion,\n      clientes: clientes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : mostrarPrevia ? /*#__PURE__*/_jsxDEV(PreviaCotizacion, {\n      cotizacion: cotizacionSeleccionada,\n      cerrarPrevia: () => setMostrarPrevia(false),\n      clientes: clientes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TablaCotizaciones, {\n      cotizaciones: cotizaciones,\n      verPrevia: verPrevia,\n      clientes: clientes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(CotizacionesContainer, \"7lMi+tLmU4kk039Yn3LO9Glij5s=\");\n_c2 = CotizacionesContainer;\nexport default CotizacionesContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"CotizacionesContainer\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","addDoc","db","Swal","withReactContent","CotizacionForm","TablaCotizaciones","PreviaCotizacion","jsxDEV","_jsxDEV","MySwal","_c","CotizacionesContainer","_s","cotizaciones","setCotizaciones","mostrarFormulario","setMostrarFormulario","mostrarPrevia","setMostrarPrevia","cotizacionSeleccionada","setCotizacionSeleccionada","clientes","setClientes","numeroCotizacion","setNumeroCotizacion","obtenerCotizaciones","obtenerClientes","obtenerUltimoNumeroCotizacion","cotizacionesRef","q","query","orderBy","limit","querySnapshot","forEach","doc","ultimaCotizacion","data","error","console","cotizacionesSnapshot","listaCotizaciones","docs","map","id","clientesSnapshot","listaClientes","guardarCotizacion","cotizacionData","cliente","asunto","fechaVencimiento","productosSeleccionados","length","fire","icon","title","text","find","cotizacion","nombreCliente","empresa","docRef","log","verPrevia","children","fileName","_jsxFileName","lineNumber","columnNumber","cerrarPrevia","_c2","$RefreshReg$"],"sources":["C:/Users/ALIENWARE/Documents/inventario-app/src/pages/cotizacion.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, getDocs, addDoc } from 'firebase/firestore';\r\nimport { db } from '../firebaseConfig';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport CotizacionForm from '../components/CotizacionForm';\r\nimport TablaCotizaciones from '../components/TablaCotizaciones';\r\nimport PreviaCotizacion from '../components/PreviaCotizacion';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nfunction CotizacionesContainer() {\r\n  const [cotizaciones, setCotizaciones] = useState([]);\r\n  const [mostrarFormulario, setMostrarFormulario] = useState(true);\r\n  const [mostrarPrevia, setMostrarPrevia] = useState(false);\r\n  const [cotizacionSeleccionada, setCotizacionSeleccionada] = useState(null);\r\n  const [clientes, setClientes] = useState([]);\r\n  const [numeroCotizacion, setNumeroCotizacion] = useState(null);\r\n\r\n  useEffect(() => {\r\n    obtenerCotizaciones();\r\n    obtenerClientes();\r\n    obtenerUltimoNumeroCotizacion();\r\n  }, []);\r\n\r\n  // Función para obtener el último número de cotización\r\n  const obtenerUltimoNumeroCotizacion = async () => {\r\n    try {\r\n      const cotizacionesRef = collection(db, 'cotizaciones');\r\n      const q = query(cotizacionesRef, orderBy('numeroCotizacion', 'desc'), limit(1));\r\n      const querySnapshot = await getDocs(q);\r\n      querySnapshot.forEach((doc) => {\r\n        const ultimaCotizacion = doc.data();\r\n        setNumeroCotizacion(ultimaCotizacion.numeroCotizacion + 1); // Asignar el siguiente número de cotización\r\n      });\r\n    } catch (error) {\r\n      console.error('Error al obtener el último número de cotización:', error);\r\n    }\r\n  };\r\n\r\n  const obtenerCotizaciones = async () => {\r\n    try {\r\n      const cotizacionesSnapshot = await getDocs(collection(db, 'cotizaciones'));\r\n      const listaCotizaciones = cotizacionesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setCotizaciones(listaCotizaciones);\r\n    } catch (error) {\r\n      console.error('Error al obtener las cotizaciones:', error);\r\n    }\r\n  };\r\n\r\n  const obtenerClientes = async () => {\r\n    try {\r\n      const clientesSnapshot = await getDocs(collection(db, 'clientes'));\r\n      const listaClientes = clientesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setClientes(listaClientes);\r\n    } catch (error) {\r\n      console.error('Error al obtener los clientes:', error);\r\n    }\r\n  };\r\n\r\n  const guardarCotizacion = async (cotizacionData) => {\r\n    try {\r\n      if (!cotizacionData.cliente || !cotizacionData.asunto || !cotizacionData.fechaVencimiento || cotizacionData.productosSeleccionados.length === 0) {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'Todos los campos son obligatorios',\r\n        });\r\n        return;\r\n      }\r\n  \r\n      const cliente = clientes.find(cliente => cliente.id === cotizacionData.cliente);\r\n      if (!cliente) {\r\n        console.error('Cliente no encontrado');\r\n        return;\r\n      }\r\n  \r\n      const cotizacion = {\r\n        ...cotizacionData,\r\n        nombreCliente: cliente.empresa, // Asignar el nombre del cliente en lugar de su ID\r\n      };\r\n  \r\n      const docRef = await addDoc(collection(db, 'cotizaciones'), cotizacion);\r\n      console.log('Cotización guardada con ID: ', docRef.id);\r\n      obtenerCotizaciones();\r\n      setMostrarFormulario(false);\r\n    } catch (error) {\r\n      console.error('Error al guardar la cotización:', error);\r\n    }\r\n  };\r\n\r\n  const verPrevia = (cotizacion) => {\r\n    setCotizacionSeleccionada(cotizacion);\r\n    setMostrarPrevia(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {mostrarFormulario ? (\r\n        <CotizacionForm guardarCotizacion={guardarCotizacion} clientes={clientes} /> \r\n      ) : mostrarPrevia ? (\r\n        <PreviaCotizacion cotizacion={cotizacionSeleccionada} cerrarPrevia={() => setMostrarPrevia(false)} clientes={clientes} /> \r\n      ) : (\r\n        <TablaCotizaciones cotizaciones={cotizaciones} verPrevia={verPrevia} clientes={clientes} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CotizacionesContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,oBAAoB;AAChE,SAASC,EAAE,QAAQ,mBAAmB;AACtC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,gBAAgB,MAAM,2BAA2B;AACxD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,MAAM,GAAGN,gBAAgB,CAACD,IAAI,CAAC;AAACQ,EAAA,GAAhCD,MAAM;AAEZ,SAASE,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACuB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC1E,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACd4B,mBAAmB,CAAC,CAAC;IACrBC,eAAe,CAAC,CAAC;IACjBC,6BAA6B,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,6BAA6B,GAAG,MAAAA,CAAA,KAAY;IAChD,IAAI;MACF,MAAMC,eAAe,GAAG9B,UAAU,CAACG,EAAE,EAAE,cAAc,CAAC;MACtD,MAAM4B,CAAC,GAAGC,KAAK,CAACF,eAAe,EAAEG,OAAO,CAAC,kBAAkB,EAAE,MAAM,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC/E,MAAMC,aAAa,GAAG,MAAMlC,OAAO,CAAC8B,CAAC,CAAC;MACtCI,aAAa,CAACC,OAAO,CAAEC,GAAG,IAAK;QAC7B,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC;QACnCb,mBAAmB,CAACY,gBAAgB,CAACb,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9D,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;IAC1E;EACF,CAAC;EAED,MAAMb,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMe,oBAAoB,GAAG,MAAMzC,OAAO,CAACD,UAAU,CAACG,EAAE,EAAE,cAAc,CAAC,CAAC;MAC1E,MAAMwC,iBAAiB,GAAGD,oBAAoB,CAACE,IAAI,CAACC,GAAG,CAACR,GAAG,KAAK;QAAES,EAAE,EAAET,GAAG,CAACS,EAAE;QAAE,GAAGT,GAAG,CAACE,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC;MAC/FvB,eAAe,CAAC2B,iBAAiB,CAAC;IACpC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;EAED,MAAMZ,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMmB,gBAAgB,GAAG,MAAM9C,OAAO,CAACD,UAAU,CAACG,EAAE,EAAE,UAAU,CAAC,CAAC;MAClE,MAAM6C,aAAa,GAAGD,gBAAgB,CAACH,IAAI,CAACC,GAAG,CAACR,GAAG,KAAK;QAAES,EAAE,EAAET,GAAG,CAACS,EAAE;QAAE,GAAGT,GAAG,CAACE,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC;MACvFf,WAAW,CAACwB,aAAa,CAAC;IAC5B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,MAAMS,iBAAiB,GAAG,MAAOC,cAAc,IAAK;IAClD,IAAI;MACF,IAAI,CAACA,cAAc,CAACC,OAAO,IAAI,CAACD,cAAc,CAACE,MAAM,IAAI,CAACF,cAAc,CAACG,gBAAgB,IAAIH,cAAc,CAACI,sBAAsB,CAACC,MAAM,KAAK,CAAC,EAAE;QAC/I5C,MAAM,CAAC6C,IAAI,CAAC;UACVC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE;QACR,CAAC,CAAC;QACF;MACF;MAEA,MAAMR,OAAO,GAAG5B,QAAQ,CAACqC,IAAI,CAACT,OAAO,IAAIA,OAAO,CAACL,EAAE,KAAKI,cAAc,CAACC,OAAO,CAAC;MAC/E,IAAI,CAACA,OAAO,EAAE;QACZV,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAC;QACtC;MACF;MAEA,MAAMqB,UAAU,GAAG;QACjB,GAAGX,cAAc;QACjBY,aAAa,EAAEX,OAAO,CAACY,OAAO,CAAE;MAClC,CAAC;MAED,MAAMC,MAAM,GAAG,MAAM9D,MAAM,CAACF,UAAU,CAACG,EAAE,EAAE,cAAc,CAAC,EAAE0D,UAAU,CAAC;MACvEpB,OAAO,CAACwB,GAAG,CAAC,8BAA8B,EAAED,MAAM,CAAClB,EAAE,CAAC;MACtDnB,mBAAmB,CAAC,CAAC;MACrBT,oBAAoB,CAAC,KAAK,CAAC;IAC7B,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAM0B,SAAS,GAAIL,UAAU,IAAK;IAChCvC,yBAAyB,CAACuC,UAAU,CAAC;IACrCzC,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACEV,OAAA;IAAAyD,QAAA,EACGlD,iBAAiB,gBAChBP,OAAA,CAACJ,cAAc;MAAC2C,iBAAiB,EAAEA,iBAAkB;MAAC1B,QAAQ,EAAEA;IAAS;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAC1EpD,aAAa,gBACfT,OAAA,CAACF,gBAAgB;MAACqD,UAAU,EAAExC,sBAAuB;MAACmD,YAAY,EAAEA,CAAA,KAAMpD,gBAAgB,CAAC,KAAK,CAAE;MAACG,QAAQ,EAAEA;IAAS;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEzH7D,OAAA,CAACH,iBAAiB;MAACQ,YAAY,EAAEA,YAAa;MAACmD,SAAS,EAAEA,SAAU;MAAC3C,QAAQ,EAAEA;IAAS;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC3F;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzD,EAAA,CAhGQD,qBAAqB;AAAA4D,GAAA,GAArB5D,qBAAqB;AAkG9B,eAAeA,qBAAqB;AAAC,IAAAD,EAAA,EAAA6D,GAAA;AAAAC,YAAA,CAAA9D,EAAA;AAAA8D,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}