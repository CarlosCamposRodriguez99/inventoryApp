{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALIENWARE\\\\Documents\\\\inventario-app\\\\src\\\\components\\\\CotizacionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, getDocs, addDoc } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CotizacionForm() {\n  _s();\n  const [cliente, setCliente] = useState('');\n  const [clientes, setClientes] = useState([]);\n  const [productos, setProductos] = useState([]);\n  const [asunto, setAsunto] = useState('');\n  const [fechaCotizacion, setFechaCotizacion] = useState(getCurrentDate());\n  const [fechaVencimiento, setFechaVencimiento] = useState('');\n  const [productoSeleccionado, setProductoSeleccionado] = useState('');\n  const [productosSeleccionados, setProductosSeleccionados] = useState([]);\n  const [mostrarPrevia, setMostrarPrevia] = useState(false);\n  const [numeroCotizacion, setNumeroCotizacion] = useState(0);\n  useEffect(() => {\n    obtenerClientes();\n    obtenerProductos();\n    obtenerNumeroCotizacion();\n  }, []);\n  const obtenerNumeroCotizacion = async () => {\n    try {\n      const cotizacionesSnapshot = await getDocs(collection(db, 'cotizaciones'));\n      // Obtener el número máximo de cotización y agregar 1 para el siguiente número\n      const numeroMaximo = Math.max(...cotizacionesSnapshot.docs.map(doc => doc.data().numero), 0);\n      setNumeroCotizacion(numeroMaximo + 1);\n    } catch (error) {\n      console.error('Error al obtener el número de cotización:', error);\n    }\n  };\n  async function guardarCotizacion() {\n    try {\n      // Aquí podrías agregar lógica para guardar la cotización en la base de datos\n      await addDoc(collection(db, 'cotizaciones'), {\n        numero: numeroCotizacion,\n        cliente,\n        asunto,\n        fechaCotizacion,\n        productos: productosSeleccionados\n        // Otros datos de la cotización que desees guardar\n      });\n      setMostrarPrevia(true); // Mostrar previa después de guardar\n      setNumeroCotizacion(prevNumero => prevNumero + 1); // Incrementar el número de cotización para la próxima\n    } catch (error) {\n      console.error('Error al guardar la cotización:', error);\n    }\n  }\n  const obtenerClientes = async () => {\n    try {\n      const clientesSnapshot = await getDocs(collection(db, 'clientes'));\n      const listaClientes = clientesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setClientes(listaClientes);\n    } catch (error) {\n      console.error('Error al obtener clientes:', error);\n    }\n  };\n  const obtenerProductos = async () => {\n    try {\n      const productosSnapshot = await getDocs(collection(db, 'productos'));\n      const listaProductos = productosSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        tipoDescuento: 'cantidad',\n        valorDescuento: 0\n      }));\n      setProductos(listaProductos);\n    } catch (error) {\n      console.error('Error al obtener los productos:', error);\n    }\n  };\n  function getCurrentDate() {\n    const date = new Date();\n    return date.toISOString().split('T')[0];\n  }\n  function agregarProducto() {\n    if (productoSeleccionado) {\n      const producto = productos.find(p => p.id === productoSeleccionado);\n      if (producto) {\n        setProductosSeleccionados([...productosSeleccionados, {\n          ...producto,\n          productoIdEditado: producto.id\n        }]);\n        setProductoSeleccionado('');\n      }\n    }\n  }\n  const eliminarProducto = idProducto => {\n    setProductosSeleccionados(prevProductos => prevProductos.filter(producto => producto.id !== idProducto));\n  };\n  const actualizarCantidad = (idProducto, cantidad) => {\n    setProductosSeleccionados(prevProductos => prevProductos.map(producto => producto.id === idProducto ? {\n      ...producto,\n      cantidad: cantidad !== '' ? Number(cantidad) : 0,\n      subtotal: (cantidad !== '' ? Number(cantidad) : 0) * producto.costo\n    } : producto));\n  };\n  function agregarProductoAutomatico(e) {\n    const productoId = e.target.value;\n    const producto = productos.find(p => p.id === productoId);\n    if (producto) {\n      const productoExistente = productosSeleccionados.find(p => p.id === productoId);\n      if (productoExistente) {\n        // Si el producto ya existe, aumentar la cantidad en 1\n        const nuevaCantidad = productoExistente.cantidad + 1;\n        actualizarCantidad(productoExistente.id, nuevaCantidad);\n      } else {\n        // Calcular subtotal para 1 cantidad\n        const subtotal = producto.costo;\n        // Establecer la cantidad en 1 por defecto\n        const productoConCantidad = {\n          ...producto,\n          cantidad: 1,\n          subtotal,\n          productoIdEditado: producto.id\n        };\n        setProductosSeleccionados([...productosSeleccionados, productoConCantidad]);\n        setProductoSeleccionado('');\n      }\n    }\n  }\n  const actualizarDescuento = (idProducto, tipoDescuento, valorDescuento) => {\n    setProductosSeleccionados(prevProductos => prevProductos.map(producto => producto.id === idProducto ? calcularDescuento(producto, tipoDescuento, valorDescuento) : producto));\n  };\n  const calcularDescuento = (producto, tipoDescuento, valorDescuento) => {\n    let subtotal = producto.cantidad * producto.costo;\n    let descuentoAplicado = 0;\n    if (tipoDescuento === 'cantidad') {\n      subtotal -= valorDescuento;\n      descuentoAplicado = valorDescuento;\n    } else if (tipoDescuento === 'porcentaje') {\n      const descuento = subtotal * valorDescuento / 100;\n      subtotal -= descuento;\n      descuentoAplicado = descuento;\n    }\n    return {\n      ...producto,\n      tipoDescuento,\n      valorDescuento,\n      subtotal,\n      descuento: descuentoAplicado\n    };\n  };\n  const actualizarIdProducto = (idProducto, nuevoId) => {\n    setProductosSeleccionados(prevProductos => prevProductos.map(producto => producto.id === idProducto ? {\n      ...producto,\n      productoIdEditado: nuevoId\n    } : producto));\n  };\n  const actualizarNombreProducto = (idProducto, nuevoNombre) => {\n    setProductosSeleccionados(prevProductos => prevProductos.map(producto => producto.id === idProducto ? {\n      ...producto,\n      nombre: nuevoNombre\n    } : producto));\n  };\n  const actualizarPrecio = (idProducto, nuevoPrecio) => {\n    setProductosSeleccionados(prevProductos => prevProductos.map(producto => producto.id === idProducto ? {\n      ...producto,\n      costo: parseFloat(nuevoPrecio),\n      subtotal: parseFloat(nuevoPrecio) * producto.cantidad\n    } : producto));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cotizacion-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cotizacion-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/logo-iciamex.png\",\n          alt: \"ICIAMEX\",\n          className: \"logoCotizacion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"cotizacion-title\",\n          children: \"Cotizaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cotizacion-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cliente\",\n          children: \"Cliente:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"cliente\",\n          name: \"cliente\",\n          value: cliente,\n          onChange: e => setCliente(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), clientes.map(cliente => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cliente.id,\n            children: cliente.empresa\n          }, cliente.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"asunto\",\n          children: \"Asunto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"asunto\",\n          name: \"asunto\",\n          value: asunto,\n          onChange: e => setAsunto(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 117\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fecha-cotizacion\",\n          children: \"Fecha de cotizaci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fecha-cotizacion\",\n          name: \"fecha-cotizacion\",\n          value: getCurrentDate(),\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 112\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fecha-vencimiento\",\n          children: \"Fecha de vencimiento:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"fecha-vencimiento\",\n          name: \"fecha-vencimiento\",\n          value: fechaVencimiento,\n          onChange: e => setFechaVencimiento(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 159\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"productos\",\n          children: \"Agregar Producto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"productos\",\n          name: \"productos\",\n          value: productoSeleccionado,\n          onChange: agregarProductoAutomatico,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar producto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), productos.map(producto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: producto.id,\n            children: producto.nombre\n          }, producto.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: agregarProducto,\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Resumen:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"productos-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cantidad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Descripci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Precio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Descuento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subtotal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acciones\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: productosSeleccionados.map(producto => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: producto.cantidad !== undefined ? producto.cantidad : '',\n                  onChange: e => actualizarCantidad(producto.id, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: producto.productoIdEditado // Utilizamos el estado local actualizado\n                  ,\n                  onChange: e => actualizarIdProducto(producto.id, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: producto.nombre,\n                  onChange: e => actualizarNombreProducto(producto.id, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: parseFloat(producto.costo).toFixed(2),\n                  onChange: e => {\n                    actualizarPrecio(producto.id, e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  value: producto.tipoDescuento,\n                  onChange: e => actualizarDescuento(producto.id, e.target.value, producto.valorDescuento),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"cantidad\",\n                    children: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"porcentaje\",\n                    children: \"%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this), producto.tipoDescuento === 'porcentaje' && '%', /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: producto.valorDescuento,\n                  onChange: e => actualizarDescuento(producto.id, producto.tipoDescuento, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", parseFloat(producto.subtotal).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => eliminarProducto(producto.id),\n                  children: \"\\u2718\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, producto.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Guardado por \\xFAltima vez: Hoy a las 4:30 p.m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: guardarCotizacion,\n          children: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), mostrarPrevia && /*#__PURE__*/_jsxDEV(PreviaCotizacion, {\n      cliente: cliente,\n      clientes: clientes,\n      asunto: asunto,\n      fechaCotizacion: fechaCotizacion,\n      productosSeleccionados: productosSeleccionados,\n      eliminarProducto: eliminarProducto,\n      actualizarCantidad: actualizarCantidad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(CotizacionForm, \"kQzgFSKu0k0hWJ3sPioO/4QFDR0=\");\n_c = CotizacionForm;\nfunction PreviaCotizacion({\n  cliente,\n  clientes,\n  asunto,\n  fechaCotizacion,\n  productosSeleccionados,\n  eliminarProducto,\n  actualizarDescuento\n}) {\n  var _clientes$find;\n  // Obtener el nombre del cliente\n  const nombreCliente = ((_clientes$find = clientes.find(c => c.id === cliente)) === null || _clientes$find === void 0 ? void 0 : _clientes$find.empresa) || '';\n\n  // Función para calcular los totales, incluyendo el descuento\n  const calcularTotales = () => {\n    let subtotal = 0;\n    let descuentoTotal = 0;\n    productosSeleccionados.forEach(producto => {\n      subtotal += parseFloat(producto.subtotal);\n      descuentoTotal += parseFloat(producto.descuento) || 0;\n    });\n    const iva = subtotal * 0.16;\n    const total = subtotal + iva - descuentoTotal;\n    return {\n      subtotal,\n      iva,\n      total,\n      descuentoTotal\n    };\n  };\n  const {\n    subtotal,\n    iva,\n    total,\n    descuentoTotal\n  } = calcularTotales();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"previa-cotizacion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Previa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cotizaci\\xF3n: 0001\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Fecha de cotizaci\\xF3n: \", fechaCotizacion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Asunto: \", asunto]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cliente: \", nombreCliente]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"DESCRIPCI\\xD3N\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Subtotal: $\", subtotal.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Descuento: $\", descuentoTotal.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"IVA: $\", iva.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total: $\", total.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n}\n_c2 = PreviaCotizacion;\nexport default CotizacionForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"CotizacionForm\");\n$RefreshReg$(_c2, \"PreviaCotizacion\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","addDoc","db","jsxDEV","_jsxDEV","CotizacionForm","_s","cliente","setCliente","clientes","setClientes","productos","setProductos","asunto","setAsunto","fechaCotizacion","setFechaCotizacion","getCurrentDate","fechaVencimiento","setFechaVencimiento","productoSeleccionado","setProductoSeleccionado","productosSeleccionados","setProductosSeleccionados","mostrarPrevia","setMostrarPrevia","numeroCotizacion","setNumeroCotizacion","obtenerClientes","obtenerProductos","obtenerNumeroCotizacion","cotizacionesSnapshot","numeroMaximo","Math","max","docs","map","doc","data","numero","error","console","guardarCotizacion","prevNumero","clientesSnapshot","listaClientes","id","productosSnapshot","listaProductos","tipoDescuento","valorDescuento","date","Date","toISOString","split","agregarProducto","producto","find","p","productoIdEditado","eliminarProducto","idProducto","prevProductos","filter","actualizarCantidad","cantidad","Number","subtotal","costo","agregarProductoAutomatico","e","productoId","target","value","productoExistente","nuevaCantidad","productoConCantidad","actualizarDescuento","calcularDescuento","descuentoAplicado","descuento","actualizarIdProducto","nuevoId","actualizarNombreProducto","nuevoNombre","nombre","actualizarPrecio","nuevoPrecio","parseFloat","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","onChange","empresa","type","readOnly","onClick","undefined","toFixed","PreviaCotizacion","_c","_clientes$find","nombreCliente","c","calcularTotales","descuentoTotal","forEach","iva","total","_c2","$RefreshReg$"],"sources":["C:/Users/ALIENWARE/Documents/inventario-app/src/components/CotizacionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, getDocs, addDoc } from 'firebase/firestore';\r\nimport { db } from '../firebaseConfig';\r\n\r\nfunction CotizacionForm() {\r\n  const [cliente, setCliente] = useState('');\r\n  const [clientes, setClientes] = useState([]);\r\n  const [productos, setProductos] = useState([]);\r\n  const [asunto, setAsunto] = useState('');\r\n  const [fechaCotizacion, setFechaCotizacion] = useState(getCurrentDate());\r\n  const [fechaVencimiento, setFechaVencimiento] = useState('');\r\n  const [productoSeleccionado, setProductoSeleccionado] = useState('');\r\n  const [productosSeleccionados, setProductosSeleccionados] = useState([]);\r\n  const [mostrarPrevia, setMostrarPrevia] = useState(false);\r\n  const [numeroCotizacion, setNumeroCotizacion] = useState(0);\r\n\r\n  useEffect(() => {\r\n    obtenerClientes();\r\n    obtenerProductos();\r\n    obtenerNumeroCotizacion();\r\n  }, []);\r\n\r\n  const obtenerNumeroCotizacion = async () => {\r\n    try {\r\n      const cotizacionesSnapshot = await getDocs(collection(db, 'cotizaciones'));\r\n      // Obtener el número máximo de cotización y agregar 1 para el siguiente número\r\n      const numeroMaximo = Math.max(...cotizacionesSnapshot.docs.map(doc => doc.data().numero), 0);\r\n      setNumeroCotizacion(numeroMaximo + 1);\r\n    } catch (error) {\r\n      console.error('Error al obtener el número de cotización:', error);\r\n    }\r\n  };\r\n\r\n  async function guardarCotizacion() {\r\n    try {\r\n      // Aquí podrías agregar lógica para guardar la cotización en la base de datos\r\n      await addDoc(collection(db, 'cotizaciones'), {\r\n        numero: numeroCotizacion,\r\n        cliente,\r\n        asunto,\r\n        fechaCotizacion,\r\n        productos: productosSeleccionados,\r\n        // Otros datos de la cotización que desees guardar\r\n      });\r\n      setMostrarPrevia(true); // Mostrar previa después de guardar\r\n      setNumeroCotizacion(prevNumero => prevNumero + 1); // Incrementar el número de cotización para la próxima\r\n    } catch (error) {\r\n      console.error('Error al guardar la cotización:', error);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  const obtenerClientes = async () => {\r\n    try {\r\n      const clientesSnapshot = await getDocs(collection(db, 'clientes'));\r\n      const listaClientes = clientesSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n      setClientes(listaClientes);\r\n    } catch (error) {\r\n      console.error('Error al obtener clientes:', error);\r\n    }\r\n  };\r\n\r\n  const obtenerProductos = async () => {\r\n    try {\r\n      const productosSnapshot = await getDocs(collection(db, 'productos'));\r\n      const listaProductos = productosSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data(), tipoDescuento: 'cantidad', valorDescuento: 0 }));\r\n      setProductos(listaProductos);\r\n    } catch (error) {\r\n      console.error('Error al obtener los productos:', error);\r\n    }\r\n  };\r\n\r\n  function getCurrentDate() {\r\n    const date = new Date();\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n\r\n  function agregarProducto() {\r\n    if (productoSeleccionado) {\r\n      const producto = productos.find(p => p.id === productoSeleccionado);\r\n      if (producto) {\r\n        setProductosSeleccionados([...productosSeleccionados, { ...producto, productoIdEditado: producto.id }]);\r\n        setProductoSeleccionado('');\r\n      }\r\n    }\r\n  }\r\n\r\n  const eliminarProducto = (idProducto) => {\r\n    setProductosSeleccionados(prevProductos => prevProductos.filter(producto => producto.id !== idProducto));\r\n  };\r\n\r\n  const actualizarCantidad = (idProducto, cantidad) => {\r\n    setProductosSeleccionados(prevProductos =>\r\n      prevProductos.map(producto =>\r\n        producto.id === idProducto ? { ...producto, cantidad: cantidad !== '' ? Number(cantidad) : 0, subtotal: (cantidad !== '' ? Number(cantidad) : 0) * producto.costo } : producto\r\n      )\r\n    );\r\n  };\r\n\r\n\r\n  function agregarProductoAutomatico(e) {\r\n    const productoId = e.target.value;\r\n    const producto = productos.find(p => p.id === productoId);\r\n    if (producto) {\r\n      const productoExistente = productosSeleccionados.find(p => p.id === productoId);\r\n      if (productoExistente) {\r\n        // Si el producto ya existe, aumentar la cantidad en 1\r\n        const nuevaCantidad = productoExistente.cantidad + 1;\r\n        actualizarCantidad(productoExistente.id, nuevaCantidad);\r\n      } else {\r\n        // Calcular subtotal para 1 cantidad\r\n        const subtotal = producto.costo;\r\n        // Establecer la cantidad en 1 por defecto\r\n        const productoConCantidad = { ...producto, cantidad: 1, subtotal, productoIdEditado: producto.id };\r\n        setProductosSeleccionados([...productosSeleccionados, productoConCantidad]);\r\n        setProductoSeleccionado('');\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n  const actualizarDescuento = (idProducto, tipoDescuento, valorDescuento) => {\r\n    setProductosSeleccionados(prevProductos =>\r\n      prevProductos.map(producto =>\r\n        producto.id === idProducto ? calcularDescuento(producto, tipoDescuento, valorDescuento) : producto\r\n      )\r\n    );\r\n  };\r\n\r\n  const calcularDescuento = (producto, tipoDescuento, valorDescuento) => {\r\n    let subtotal = producto.cantidad * producto.costo;\r\n    let descuentoAplicado = 0;\r\n\r\n    if (tipoDescuento === 'cantidad') {\r\n      subtotal -= valorDescuento;\r\n      descuentoAplicado = valorDescuento;\r\n    } else if (tipoDescuento === 'porcentaje') {\r\n      const descuento = (subtotal * valorDescuento) / 100;\r\n      subtotal -= descuento;\r\n      descuentoAplicado = descuento;\r\n    }\r\n\r\n    return { ...producto, tipoDescuento, valorDescuento, subtotal, descuento: descuentoAplicado };\r\n  };\r\n\r\n  const actualizarIdProducto = (idProducto, nuevoId) => {\r\n    setProductosSeleccionados(prevProductos =>\r\n      prevProductos.map(producto =>\r\n        producto.id === idProducto ? { ...producto, productoIdEditado: nuevoId } : producto\r\n      )\r\n    );\r\n  };\r\n\r\n  const actualizarNombreProducto = (idProducto, nuevoNombre) => {\r\n    setProductosSeleccionados(prevProductos =>\r\n      prevProductos.map(producto =>\r\n        producto.id === idProducto ? { ...producto, nombre: nuevoNombre } : producto\r\n      )\r\n    );\r\n  };\r\n\r\n  const actualizarPrecio = (idProducto, nuevoPrecio) => {\r\n    setProductosSeleccionados(prevProductos =>\r\n      prevProductos.map(producto =>\r\n        producto.id === idProducto ? { ...producto, costo: parseFloat(nuevoPrecio), subtotal: parseFloat(nuevoPrecio) * producto.cantidad } : producto\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"cotizacion-form\">\r\n      <form>\r\n        <div className=\"cotizacion-header\">\r\n          <img src=\"/img/logo-iciamex.png\" alt=\"ICIAMEX\" className=\"logoCotizacion\" />\r\n          <div className=\"border-right\"></div>\r\n          <h1 className=\"cotizacion-title\">Cotización</h1>\r\n        </div>\r\n\r\n        <div className=\"cotizacion-body\">\r\n          <label htmlFor=\"cliente\">Cliente:</label>\r\n          <select id=\"cliente\" name=\"cliente\" value={cliente} onChange={(e) => setCliente(e.target.value)}>\r\n            <option value=\"\">Seleccionar cliente</option>\r\n            {clientes.map((cliente) => (\r\n              <option key={cliente.id} value={cliente.id}>\r\n                {cliente.empresa}\r\n              </option>\r\n            ))}\r\n          </select><br />\r\n\r\n          <label htmlFor=\"asunto\">Asunto:</label>\r\n          <input type=\"text\" id=\"asunto\" name=\"asunto\" value={asunto} onChange={(e) => setAsunto(e.target.value)} /><br />\r\n\r\n          <label htmlFor=\"fecha-cotizacion\">Fecha de cotización:</label>\r\n          <input type=\"text\" id=\"fecha-cotizacion\" name=\"fecha-cotizacion\" value={getCurrentDate()} readOnly /><br />\r\n\r\n          <label htmlFor=\"fecha-vencimiento\">Fecha de vencimiento:</label>\r\n          <input type=\"date\" id=\"fecha-vencimiento\" name=\"fecha-vencimiento\" value={fechaVencimiento} onChange={(e) => setFechaVencimiento(e.target.value)} /><br />\r\n\r\n          <label htmlFor=\"productos\">Agregar Producto:</label>\r\n          <select id=\"productos\" name=\"productos\" value={productoSeleccionado} onChange={agregarProductoAutomatico}>\r\n            <option value=\"\">Seleccionar producto</option>\r\n            {productos.map((producto) => (\r\n              <option key={producto.id} value={producto.id}>\r\n                {producto.nombre}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button type=\"button\" onClick={agregarProducto}>Agregar</button>\r\n\r\n          <h2>Resumen:</h2>\r\n          <table className=\"productos-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Cantidad</th>\r\n                <th>ID</th>\r\n                <th>Descripción</th>\r\n                <th>Precio</th>\r\n                <th>Descuento</th>\r\n                <th>Subtotal</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {productosSeleccionados.map((producto) => (\r\n                <tr key={producto.id}>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={producto.cantidad !== undefined ? producto.cantidad : ''}\r\n                      onChange={(e) => actualizarCantidad(producto.id, e.target.value)}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={producto.productoIdEditado} // Utilizamos el estado local actualizado\r\n                      onChange={(e) => actualizarIdProducto(producto.id, e.target.value)}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={producto.nombre}\r\n                      onChange={(e) => actualizarNombreProducto(producto.id, e.target.value)}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={parseFloat(producto.costo).toFixed(2)}\r\n                      onChange={(e) => {\r\n                        actualizarPrecio(producto.id, e.target.value);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <select\r\n                      value={producto.tipoDescuento}\r\n                      onChange={(e) => actualizarDescuento(producto.id, e.target.value, producto.valorDescuento)}\r\n                    >\r\n                      <option value=\"cantidad\">$</option>\r\n                      <option value=\"porcentaje\">%</option>\r\n                    </select>\r\n                    {producto.tipoDescuento === 'porcentaje' && '%'}\r\n                    <input\r\n                      type=\"text\"\r\n                      value={producto.valorDescuento}\r\n                      onChange={(e) => actualizarDescuento(producto.id, producto.tipoDescuento, e.target.value)}\r\n                    />\r\n                  </td>\r\n                  <td>${parseFloat(producto.subtotal).toFixed(2)}</td>\r\n                  <td>\r\n                    <button onClick={() => eliminarProducto(producto.id)}>✘</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <p>Guardado por última vez: Hoy a las 4:30 p.m</p>\r\n          <button type=\"button\">Cancelar</button>\r\n          <button type=\"button\" onClick={guardarCotizacion}>Guardar</button>\r\n        </div>\r\n      </form>\r\n\r\n      {mostrarPrevia && (\r\n        <PreviaCotizacion\r\n          cliente={cliente}\r\n          clientes={clientes}\r\n          asunto={asunto}\r\n          fechaCotizacion={fechaCotizacion}\r\n          productosSeleccionados={productosSeleccionados}\r\n          eliminarProducto={eliminarProducto}\r\n          actualizarCantidad={actualizarCantidad}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PreviaCotizacion({ cliente, clientes, asunto, fechaCotizacion, productosSeleccionados, eliminarProducto, actualizarDescuento }) {\r\n  // Obtener el nombre del cliente\r\n  const nombreCliente = clientes.find(c => c.id === cliente)?.empresa || '';\r\n\r\n  // Función para calcular los totales, incluyendo el descuento\r\n  const calcularTotales = () => {\r\n    let subtotal = 0;\r\n    let descuentoTotal = 0;\r\n  \r\n    productosSeleccionados.forEach(producto => {\r\n      subtotal += parseFloat(producto.subtotal);\r\n      descuentoTotal += parseFloat(producto.descuento) || 0;\r\n    });\r\n  \r\n    const iva = subtotal * 0.16;\r\n    const total = subtotal + iva - descuentoTotal;\r\n  \r\n    return { subtotal, iva, total, descuentoTotal };\r\n  };\r\n\r\n  const { subtotal, iva, total, descuentoTotal } = calcularTotales();\r\n\r\n  return (\r\n    <div className=\"previa-cotizacion\">\r\n      <h1>Previa</h1>\r\n      <h2>Cotización: 0001</h2>\r\n      <hr />\r\n      <p>Fecha de cotización: {fechaCotizacion}</p>\r\n      <p>Asunto: {asunto}</p>\r\n      <p>Cliente: {nombreCliente}</p> {/* Mostrar nombre del cliente */}\r\n      <h3>DESCRIPCIÓN</h3>\r\n      {/* Aquí puedes agregar los productos seleccionados */}\r\n      <h3>Subtotal: ${subtotal.toFixed(2)}</h3>\r\n      <h3>Descuento: ${descuentoTotal.toFixed(2)}</h3>\r\n      <h3>IVA: ${iva.toFixed(2)}</h3>\r\n      <h3>Total: ${total.toFixed(2)}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CotizacionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}