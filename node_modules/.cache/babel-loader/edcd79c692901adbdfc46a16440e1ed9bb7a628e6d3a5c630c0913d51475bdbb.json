{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALIENWARE\\\\Documents\\\\inventario-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ProductTable from './components/ProductTable';\nimport SearchBar from './components/SearchBar';\nimport ActionButton from './components/ActionButton';\nimport AddProductModal from './components/AddProductModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState(() => {\n    const storedProducts = JSON.parse(localStorage.getItem('productos'));\n    return storedProducts || [];\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('productos', JSON.stringify(products));\n  }, [products]);\n  const handleAddProduct = newProduct => {\n    setProducts(prevProducts => [...prevProducts, {\n      ...newProduct,\n      id: prevProducts.length + 1\n    }]);\n    setIsModalOpen(false); // Cerrar el modal después de agregar un producto\n    setEditingProduct(null); // Restablecer editingProduct a null\n  };\n  const handleEditProduct = updatedProduct => {\n    const updatedProducts = products.map(product => {\n      if (product.id === updatedProduct.id) {\n        return updatedProduct; // Actualizar el producto existente\n      }\n      return product; // Mantener los otros productos sin cambios\n    });\n    setProducts(updatedProducts);\n    setIsModalOpen(false); // Cerrar el modal después de editar un producto\n    setEditingProduct(null); // Restablecer editingProduct a null\n  };\n  const handleDeleteProduct = productId => {\n    // Filtrar los productos para excluir el producto que se va a eliminar\n    const updatedProducts = products.filter(product => product.id !== productId);\n    // Actualizar el estado con la nueva lista de productos\n    setProducts(updatedProducts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontFamily: \"Montserrat, sans-serif\"\n      },\n      children: \"Inventario de Productos ICIAMEX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductTable, {\n      products: products,\n      onEditProduct: productId => {\n        const productToEdit = products.find(product => product.id === productId);\n        setEditingProduct(productToEdit);\n        setIsModalOpen(true);\n      },\n      onDeleteProduct: handleDeleteProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n      text: \"Agregar Producto\",\n      onClick: () => {\n        setIsModalOpen(true);\n        setEditingProduct(null); // Asegurarse de que estamos agregando un nuevo producto\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddProductModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onSubmit: editingProduct ? handleEditProduct : handleAddProduct,\n      editingProduct: editingProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FNaGxNoXRCbyu0grNNjO3zaoZxc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProductTable","SearchBar","ActionButton","AddProductModal","jsxDEV","_jsxDEV","App","_s","products","setProducts","storedProducts","JSON","parse","localStorage","getItem","isModalOpen","setIsModalOpen","editingProduct","setEditingProduct","setItem","stringify","handleAddProduct","newProduct","prevProducts","id","length","handleEditProduct","updatedProduct","updatedProducts","map","product","handleDeleteProduct","productId","filter","className","children","style","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","onEditProduct","productToEdit","find","onDeleteProduct","text","onClick","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/ALIENWARE/Documents/inventario-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ProductTable from './components/ProductTable';\nimport SearchBar from './components/SearchBar';\nimport ActionButton from './components/ActionButton';\nimport AddProductModal from './components/AddProductModal';\n\nfunction App() {\n  const [products, setProducts] = useState(() => {\n    const storedProducts = JSON.parse(localStorage.getItem('productos'));\n    return storedProducts || [];\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('productos', JSON.stringify(products));\n  }, [products]);\n\n  const handleAddProduct = (newProduct) => {\n    setProducts(prevProducts => [...prevProducts, { ...newProduct, id: prevProducts.length + 1 }]);\n    setIsModalOpen(false); // Cerrar el modal después de agregar un producto\n    setEditingProduct(null); // Restablecer editingProduct a null\n  };\n\n  const handleEditProduct = (updatedProduct) => {\n    const updatedProducts = products.map(product => {\n      if (product.id === updatedProduct.id) {\n        return updatedProduct; // Actualizar el producto existente\n      }\n      return product; // Mantener los otros productos sin cambios\n    });\n    setProducts(updatedProducts);\n    setIsModalOpen(false); // Cerrar el modal después de editar un producto\n    setEditingProduct(null); // Restablecer editingProduct a null\n  };\n\n  const handleDeleteProduct = (productId) => {\n    // Filtrar los productos para excluir el producto que se va a eliminar\n    const updatedProducts = products.filter(product => product.id !== productId);\n    // Actualizar el estado con la nueva lista de productos\n    setProducts(updatedProducts);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontFamily: \"Montserrat, sans-serif\" }}>Inventario de Productos ICIAMEX</h1>\n      <SearchBar />\n      <ProductTable\n        products={products}\n        onEditProduct={(productId) => {\n          const productToEdit = products.find(product => product.id === productId);\n          setEditingProduct(productToEdit);\n          setIsModalOpen(true);\n        }}\n        onDeleteProduct={handleDeleteProduct}\n      />\n      <ActionButton text=\"Agregar Producto\" onClick={() => {\n        setIsModalOpen(true);\n        setEditingProduct(null); // Asegurarse de que estamos agregando un nuevo producto\n      }} />\n      <AddProductModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        onSubmit={editingProduct ? handleEditProduct : handleAddProduct}\n        editingProduct={editingProduct}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}