{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALIENWARE\\\\Documents\\\\inventario-app\\\\src\\\\pages\\\\lista-de-clientes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, addDoc, getDocs, deleteDoc, doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport Swal from 'sweetalert2';\nimport Modal from 'react-modal';\nimport ClientsTable from '../components/ClientsTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst ListaClientes = () => {\n  _s();\n  const [clientes, setClientes] = useState([]);\n  const [formData, setFormData] = useState({\n    id: null,\n    empresa: '',\n    rfc: '',\n    regimenFiscal: '',\n    moneda: '',\n    telefono: '',\n    correo: '',\n    imagenURL: null,\n    domicilio: '',\n    numeroExt: '',\n    numeroInt: '',\n    colonia: '',\n    codigoPostal: '',\n    ciudad: '',\n    estado: ''\n  });\n  const [modalIsOpen, setModalIsOpen] = useState(false); // Estado para controlar la apertura/cierre del modal\n  const [step, setStep] = useState(1); // Estado para controlar el paso del formulario\n\n  useEffect(() => {\n    obtenerClientes();\n  }, []);\n  const obtenerClientes = async () => {\n    const clientesSnapshot = await getDocs(collection(db, 'clientes'));\n    const listaClientes = clientesSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setClientes(listaClientes);\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (formData.id) {\n        // Actualizar cliente existente\n        await updateDoc(doc(db, 'clientes', formData.id), formData);\n        Swal.fire({\n          icon: 'success',\n          title: '¡Cliente actualizado con éxito!',\n          showConfirmButton: false,\n          timer: 1000\n        });\n      } else {\n        // Agregar nuevo cliente\n        await addDoc(collection(db, 'clientes'), formData);\n        Swal.fire({\n          icon: 'success',\n          title: '¡Cliente registrado con éxito!',\n          showConfirmButton: false,\n          timer: 1000\n        });\n      }\n      setFormData({\n        id: null,\n        empresa: '',\n        rfc: '',\n        regimenFiscal: '',\n        moneda: '',\n        telefono: '',\n        correo: '',\n        imagenURL: null,\n        domicilio: '',\n        numeroExt: '',\n        numeroInt: '',\n        colonia: '',\n        codigoPostal: '',\n        ciudad: '',\n        estado: ''\n      });\n      obtenerClientes(); // Actualizar la lista de clientes después de agregar uno nuevo o actualizar uno existente\n      setModalIsOpen(false); // Cerrar el modal después de enviar el formulario\n    } catch (error) {\n      console.error(\"Error al agregar cliente:\", error);\n    }\n  };\n  const handleEditProduct = cliente => {\n    // Establecer el estado del formulario con los datos del cliente a editar\n    setFormData(cliente);\n    // Cambiar el paso al segundo para mostrar el formulario completo\n    setStep(2);\n    // Abrir el modal\n    setModalIsOpen(true);\n  };\n  const handleDeleteProduct = async id => {\n    // Mostrar la alerta de confirmación antes de eliminar el cliente\n    Swal.fire({\n      title: '¿Estás seguro?',\n      text: '¡No podrás revertir esto!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sí, eliminar'\n    }).then(async result => {\n      if (result.isConfirmed) {\n        try {\n          await deleteDoc(doc(db, 'clientes', id));\n          Swal.fire({\n            icon: 'success',\n            title: '¡Cliente eliminado con éxito!',\n            showConfirmButton: false,\n            timer: 1000\n          });\n          obtenerClientes(); // Actualizar la lista de clientes después de eliminar uno\n        } catch (error) {\n          console.error(\"Error al eliminar cliente:\", error);\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setStep(1);\n        setModalIsOpen(true);\n      },\n      children: \"+ Nuevo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          marginBottom: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalIsOpen(false),\n          style: {\n            border: \"none\",\n            background: \"none\",\n            cursor: \"pointer\",\n            fontSize: \"20px\"\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: formData.id ? 'Editar Cliente' : 'Agregar Nuevo Cliente'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"client-form\",\n        children: [step === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"empresa\",\n            placeholder: \"Nombre de la Empresa\",\n            value: formData.empresa,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"rfc\",\n            placeholder: \"RFC\",\n            value: formData.rfc,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"regimenFiscal\",\n            placeholder: \"R\\xE9gimen Fiscal\",\n            value: formData.regimenFiscal,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"moneda\",\n            placeholder: \"Moneda\",\n            value: formData.moneda,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"telefono\",\n            placeholder: \"Tel\\xE9fono\",\n            value: formData.telefono,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"correo\",\n            placeholder: \"Correo Electr\\xF3nico\",\n            value: formData.correo,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"imagen\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), step === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"domicilio\",\n            placeholder: \"Domicilio\",\n            value: formData.domicilio,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"numeroExt\",\n            placeholder: \"No. Ext\",\n            value: formData.numeroExt,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"numeroInt\",\n            placeholder: \"No. Int\",\n            value: formData.numeroInt,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"colonia\",\n            placeholder: \"Colonia\",\n            value: formData.colonia,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"codigoPostal\",\n            placeholder: \"C.P.\",\n            value: formData.codigoPostal,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"ciudad\",\n            placeholder: \"Ciudad\",\n            value: formData.ciudad,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"estado\",\n            placeholder: \"Estado\",\n            value: formData.estado,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: formData.id ? 'Guardar Cambios' : 'Siguiente'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ClientsTable, {\n      clientes: clientes,\n      onEditProduct: handleEditProduct,\n      onDeleteProduct: handleDeleteProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(ListaClientes, \"QIfOyGhM0B0cYjKWt68hNK4IKpE=\");\n_c = ListaClientes;\nexport default ListaClientes;\nvar _c;\n$RefreshReg$(_c, \"ListaClientes\");","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","deleteDoc","doc","updateDoc","db","Swal","Modal","ClientsTable","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","ListaClientes","_s","clientes","setClientes","formData","setFormData","id","empresa","rfc","regimenFiscal","moneda","telefono","correo","imagenURL","domicilio","numeroExt","numeroInt","colonia","codigoPostal","ciudad","estado","modalIsOpen","setModalIsOpen","step","setStep","obtenerClientes","clientesSnapshot","listaClientes","docs","map","data","handleChange","e","target","name","value","handleSubmit","preventDefault","fire","icon","title","showConfirmButton","timer","error","console","handleEditProduct","cliente","handleDeleteProduct","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","style","display","justifyContent","marginBottom","border","background","cursor","fontSize","textAlign","onSubmit","className","type","placeholder","onChange","onEditProduct","onDeleteProduct","_c","$RefreshReg$"],"sources":["C:/Users/ALIENWARE/Documents/inventario-app/src/pages/lista-de-clientes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, addDoc, getDocs, deleteDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { db } from '../firebaseConfig';\r\nimport Swal from 'sweetalert2';\r\nimport Modal from 'react-modal';\r\nimport ClientsTable from '../components/ClientsTable';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ListaClientes = () => {\r\n    const [clientes, setClientes] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        id: null,\r\n        empresa: '',\r\n        rfc: '',\r\n        regimenFiscal: '',\r\n        moneda: '',\r\n        telefono: '',\r\n        correo: '',\r\n        imagenURL: null,\r\n        domicilio: '',\r\n        numeroExt: '',\r\n        numeroInt: '',\r\n        colonia: '',\r\n        codigoPostal: '',\r\n        ciudad: '',\r\n        estado: ''\r\n    });\r\n    const [modalIsOpen, setModalIsOpen] = useState(false); // Estado para controlar la apertura/cierre del modal\r\n    const [step, setStep] = useState(1); // Estado para controlar el paso del formulario\r\n\r\n    useEffect(() => {\r\n        obtenerClientes();\r\n    }, []);\r\n\r\n    const obtenerClientes = async () => {\r\n        const clientesSnapshot = await getDocs(collection(db, 'clientes'));\r\n        const listaClientes = clientesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n        setClientes(listaClientes);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (formData.id) {\r\n                // Actualizar cliente existente\r\n                await updateDoc(doc(db, 'clientes', formData.id), formData);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: '¡Cliente actualizado con éxito!',\r\n                    showConfirmButton: false,\r\n                    timer: 1000\r\n                });\r\n            } else {\r\n                // Agregar nuevo cliente\r\n                await addDoc(collection(db, 'clientes'), formData);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: '¡Cliente registrado con éxito!',\r\n                    showConfirmButton: false,\r\n                    timer: 1000\r\n                });\r\n            }\r\n            setFormData({\r\n                id: null,\r\n                empresa: '',\r\n                rfc: '',\r\n                regimenFiscal: '',\r\n                moneda: '',\r\n                telefono: '',\r\n                correo: '',\r\n                imagenURL: null,\r\n                domicilio: '',\r\n                numeroExt: '',\r\n                numeroInt: '',\r\n                colonia: '',\r\n                codigoPostal: '',\r\n                ciudad: '',\r\n                estado: ''\r\n            });\r\n            obtenerClientes(); // Actualizar la lista de clientes después de agregar uno nuevo o actualizar uno existente\r\n            setModalIsOpen(false); // Cerrar el modal después de enviar el formulario\r\n        } catch (error) {\r\n            console.error(\"Error al agregar cliente:\", error);\r\n        }\r\n    };\r\n\r\n    const handleEditProduct = (cliente) => {\r\n        // Establecer el estado del formulario con los datos del cliente a editar\r\n        setFormData(cliente);\r\n        // Cambiar el paso al segundo para mostrar el formulario completo\r\n        setStep(2);\r\n        // Abrir el modal\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const handleDeleteProduct = async (id) => {\r\n        // Mostrar la alerta de confirmación antes de eliminar el cliente\r\n        Swal.fire({\r\n            title: '¿Estás seguro?',\r\n            text: '¡No podrás revertir esto!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                try {\r\n                    await deleteDoc(doc(db, 'clientes', id));\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: '¡Cliente eliminado con éxito!',\r\n                        showConfirmButton: false,\r\n                        timer: 1000\r\n                    });\r\n                    obtenerClientes(); // Actualizar la lista de clientes después de eliminar uno\r\n                } catch (error) {\r\n                    console.error(\"Error al eliminar cliente:\", error);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Lista de Clientes</h1>\r\n            <button onClick={() => {\r\n                setStep(1);\r\n                setModalIsOpen(true);\r\n            }}>+ Nuevo</button>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={() => setModalIsOpen(false)}\r\n                \r\n            >\r\n                <div style={{ display: \"flex\", justifyContent: \"flex-end\", marginBottom: \"20px\" }}>\r\n                    <button onClick={() => setModalIsOpen(false)} style={{ border: \"none\", background: \"none\", cursor: \"pointer\", fontSize: \"20px\" }}>×</button>\r\n                </div>\r\n                <h2 style={{textAlign: \"center\"}}>{formData.id ? 'Editar Cliente' : 'Agregar Nuevo Cliente'}</h2>\r\n                <form onSubmit={handleSubmit} className=\"client-form\">\r\n                    {step === 1 && (\r\n                        <>\r\n                            <input type=\"text\" name=\"empresa\" placeholder=\"Nombre de la Empresa\" value={formData.empresa} onChange={handleChange} />\r\n                            <input type=\"text\" name=\"rfc\" placeholder=\"RFC\" value={formData.rfc} onChange={handleChange} />\r\n                            <input type=\"text\" name=\"regimenFiscal\" placeholder=\"Régimen Fiscal\" value={formData.regimenFiscal} onChange={handleChange} />\r\n                            <input type=\"text\" name=\"moneda\" placeholder=\"Moneda\" value={formData.moneda} onChange={handleChange} />\r\n                            <input type=\"text\" name=\"telefono\" placeholder=\"Teléfono\" value={formData.telefono} onChange={handleChange} />\r\n                            <input type=\"email\" name=\"correo\" placeholder=\"Correo Electrónico\" value={formData.correo} onChange={handleChange} />\r\n                            <input type=\"file\" name=\"imagen\" onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                    {step === 2 && (\r\n                        <>\r\n                            <input type=\"text\" name=\"domicilio\" placeholder=\"Domicilio\" value={formData.domicilio} onChange={handleChange} />\r\n                            <input type=\"text\" name=\"numeroExt\" placeholder=\"No. Ext\" value={formData.numeroExt} onChange={handleChange} />\r\n                            <input type=\"text\" name=\"numeroInt\" placeholder=\"No. Int\" value={formData.numeroInt} onChange={handleChange} />\r\n                            <input type=\"text\" name=\"colonia\" placeholder=\"Colonia\" value={formData.colonia} onChange={handleChange} />\r\n                            <input type=\"text\" name=\"codigoPostal\" placeholder=\"C.P.\" value={formData.codigoPostal} onChange={handleChange} />\r\n                            <input type=\"text\" name=\"ciudad\" placeholder=\"Ciudad\" value={formData.ciudad} onChange={handleChange} />\r\n                            <input type=\"text\" name=\"estado\" placeholder=\"Estado\" value={formData.estado} onChange={handleChange} />\r\n                        </>\r\n                    )}\r\n                    <button type=\"submit\">{formData.id ? 'Guardar Cambios' : 'Siguiente'}</button>\r\n                </form>\r\n            </Modal>\r\n            <ClientsTable clientes={clientes} onEditProduct={handleEditProduct} onDeleteProduct={handleDeleteProduct} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListaClientes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AAC3F,SAASC,EAAE,QAAQ,mBAAmB;AACtC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtDL,KAAK,CAACM,aAAa,CAAC,OAAO,CAAC;AAE5B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC;IACrCuB,EAAE,EAAE,IAAI;IACRC,OAAO,EAAE,EAAE;IACXC,GAAG,EAAE,EAAE;IACPC,aAAa,EAAE,EAAE;IACjBC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,IAAI;IACfC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACwC,IAAI,EAAEC,OAAO,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErCC,SAAS,CAAC,MAAM;IACZyC,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,gBAAgB,GAAG,MAAMvC,OAAO,CAACF,UAAU,CAACM,EAAE,EAAE,UAAU,CAAC,CAAC;IAClE,MAAMoC,aAAa,GAAGD,gBAAgB,CAACE,IAAI,CAACC,GAAG,CAACxC,GAAG,KAAK;MAAEiB,EAAE,EAAEjB,GAAG,CAACiB,EAAE;MAAE,GAAGjB,GAAG,CAACyC,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;IACvF3B,WAAW,CAACwB,aAAa,CAAC;EAC9B,CAAC;EAED,MAAMI,YAAY,GAAIC,CAAC,IAAK;IACxB3B,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAAC4B,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC9B,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,IAAIjC,QAAQ,CAACE,EAAE,EAAE;QACb;QACA,MAAMhB,SAAS,CAACD,GAAG,CAACE,EAAE,EAAE,UAAU,EAAEa,QAAQ,CAACE,EAAE,CAAC,EAAEF,QAAQ,CAAC;QAC3DZ,IAAI,CAAC8C,IAAI,CAAC;UACNC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,iCAAiC;UACxCC,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACX,CAAC,CAAC;MACN,CAAC,MAAM;QACH;QACA,MAAMxD,MAAM,CAACD,UAAU,CAACM,EAAE,EAAE,UAAU,CAAC,EAAEa,QAAQ,CAAC;QAClDZ,IAAI,CAAC8C,IAAI,CAAC;UACNC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,gCAAgC;UACvCC,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACX,CAAC,CAAC;MACN;MACArC,WAAW,CAAC;QACRC,EAAE,EAAE,IAAI;QACRC,OAAO,EAAE,EAAE;QACXC,GAAG,EAAE,EAAE;QACPC,aAAa,EAAE,EAAE;QACjBC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,IAAI;QACfC,SAAS,EAAE,EAAE;QACbC,SAAS,EAAE,EAAE;QACbC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE,EAAE;QACXC,YAAY,EAAE,EAAE;QAChBC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACZ,CAAC,CAAC;MACFK,eAAe,CAAC,CAAC,CAAC,CAAC;MACnBH,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,MAAME,iBAAiB,GAAIC,OAAO,IAAK;IACnC;IACAzC,WAAW,CAACyC,OAAO,CAAC;IACpB;IACAtB,OAAO,CAAC,CAAC,CAAC;IACV;IACAF,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMyB,mBAAmB,GAAG,MAAOzC,EAAE,IAAK;IACtC;IACAd,IAAI,CAAC8C,IAAI,CAAC;MACNE,KAAK,EAAE,gBAAgB;MACvBQ,IAAI,EAAE,2BAA2B;MACjCT,IAAI,EAAE,SAAS;MACfU,gBAAgB,EAAE,IAAI;MACtBC,kBAAkB,EAAE,SAAS;MAC7BC,iBAAiB,EAAE,MAAM;MACzBC,iBAAiB,EAAE;IACvB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAOC,MAAM,IAAK;MACtB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACpB,IAAI;UACA,MAAMnE,SAAS,CAACC,GAAG,CAACE,EAAE,EAAE,UAAU,EAAEe,EAAE,CAAC,CAAC;UACxCd,IAAI,CAAC8C,IAAI,CAAC;YACNC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,+BAA+B;YACtCC,iBAAiB,EAAE,KAAK;YACxBC,KAAK,EAAE;UACX,CAAC,CAAC;UACFjB,eAAe,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,OAAOkB,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACtD;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACI/C,OAAA;IAAA4D,QAAA,gBACI5D,OAAA;MAAA4D,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhE,OAAA;MAAQiE,OAAO,EAAEA,CAAA,KAAM;QACnBrC,OAAO,CAAC,CAAC,CAAC;QACVF,cAAc,CAAC,IAAI,CAAC;MACxB,CAAE;MAAAkC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnBhE,OAAA,CAACH,KAAK;MACFqE,MAAM,EAAEzC,WAAY;MACpB0C,cAAc,EAAEA,CAAA,KAAMzC,cAAc,CAAC,KAAK,CAAE;MAAAkC,QAAA,gBAG5C5D,OAAA;QAAKoE,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,UAAU;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAX,QAAA,eAC9E5D,OAAA;UAAQiE,OAAO,EAAEA,CAAA,KAAMvC,cAAc,CAAC,KAAK,CAAE;UAAC0C,KAAK,EAAE;YAAEI,MAAM,EAAE,MAAM;YAAEC,UAAU,EAAE,MAAM;YAAEC,MAAM,EAAE,SAAS;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAf,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3I,CAAC,eACNhE,OAAA;QAAIoE,KAAK,EAAE;UAACQ,SAAS,EAAE;QAAQ,CAAE;QAAAhB,QAAA,EAAEpD,QAAQ,CAACE,EAAE,GAAG,gBAAgB,GAAG;MAAuB;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjGhE,OAAA;QAAM6E,QAAQ,EAAErC,YAAa;QAACsC,SAAS,EAAC,aAAa;QAAAlB,QAAA,GAChDjC,IAAI,KAAK,CAAC,iBACP3B,OAAA,CAAAE,SAAA;UAAA0D,QAAA,gBACI5D,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,SAAS;YAAC0C,WAAW,EAAC,sBAAsB;YAACzC,KAAK,EAAE/B,QAAQ,CAACG,OAAQ;YAACsE,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxHhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,KAAK;YAAC0C,WAAW,EAAC,KAAK;YAACzC,KAAK,EAAE/B,QAAQ,CAACI,GAAI;YAACqE,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/FhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,eAAe;YAAC0C,WAAW,EAAC,mBAAgB;YAACzC,KAAK,EAAE/B,QAAQ,CAACK,aAAc;YAACoE,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9HhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,QAAQ;YAAC0C,WAAW,EAAC,QAAQ;YAACzC,KAAK,EAAE/B,QAAQ,CAACM,MAAO;YAACmE,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxGhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,UAAU;YAAC0C,WAAW,EAAC,aAAU;YAACzC,KAAK,EAAE/B,QAAQ,CAACO,QAAS;YAACkE,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9GhE,OAAA;YAAO+E,IAAI,EAAC,OAAO;YAACzC,IAAI,EAAC,QAAQ;YAAC0C,WAAW,EAAC,uBAAoB;YAACzC,KAAK,EAAE/B,QAAQ,CAACQ,MAAO;YAACiE,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACrHhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,QAAQ;YAAC2C,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eAC7D,CACL,EACArC,IAAI,KAAK,CAAC,iBACP3B,OAAA,CAAAE,SAAA;UAAA0D,QAAA,gBACI5D,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,WAAW;YAAC0C,WAAW,EAAC,WAAW;YAACzC,KAAK,EAAE/B,QAAQ,CAACU,SAAU;YAAC+D,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjHhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,WAAW;YAAC0C,WAAW,EAAC,SAAS;YAACzC,KAAK,EAAE/B,QAAQ,CAACW,SAAU;YAAC8D,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/GhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,WAAW;YAAC0C,WAAW,EAAC,SAAS;YAACzC,KAAK,EAAE/B,QAAQ,CAACY,SAAU;YAAC6D,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/GhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,SAAS;YAAC0C,WAAW,EAAC,SAAS;YAACzC,KAAK,EAAE/B,QAAQ,CAACa,OAAQ;YAAC4D,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3GhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,cAAc;YAAC0C,WAAW,EAAC,MAAM;YAACzC,KAAK,EAAE/B,QAAQ,CAACc,YAAa;YAAC2D,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClHhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,QAAQ;YAAC0C,WAAW,EAAC,QAAQ;YAACzC,KAAK,EAAE/B,QAAQ,CAACe,MAAO;YAAC0D,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxGhE,OAAA;YAAO+E,IAAI,EAAC,MAAM;YAACzC,IAAI,EAAC,QAAQ;YAAC0C,WAAW,EAAC,QAAQ;YAACzC,KAAK,EAAE/B,QAAQ,CAACgB,MAAO;YAACyD,QAAQ,EAAE9C;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eAC1G,CACL,eACDhE,OAAA;UAAQ+E,IAAI,EAAC,QAAQ;UAAAnB,QAAA,EAAEpD,QAAQ,CAACE,EAAE,GAAG,iBAAiB,GAAG;QAAW;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACRhE,OAAA,CAACF,YAAY;MAACQ,QAAQ,EAAEA,QAAS;MAAC4E,aAAa,EAAEjC,iBAAkB;MAACkC,eAAe,EAAEhC;IAAoB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3G,CAAC;AAEd,CAAC;AAAC3D,EAAA,CAvKID,aAAa;AAAAgF,EAAA,GAAbhF,aAAa;AAyKnB,eAAeA,aAAa;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}