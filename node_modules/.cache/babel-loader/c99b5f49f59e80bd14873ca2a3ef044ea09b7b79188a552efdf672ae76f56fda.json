{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALIENWARE\\\\Documents\\\\inventario-app\\\\src\\\\pages\\\\lista-de-clientes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, addDoc, getDocs, deleteDoc, doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../firebaseConfig';\nimport Swal from 'sweetalert2';\nimport Modal from 'react-modal';\nimport ClientsTable from '../components/ClientsTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    border: 'none',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    padding: '20px',\n    maxWidth: '500px',\n    width: '100%',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    fontFamily: 'Roboto, sans-serif' // Aplica la fuente Roboto\n  },\n  label: {\n    display: 'block',\n    marginBottom: '10px'\n  },\n  input: {\n    width: '100%',\n    padding: '8px',\n    marginBottom: '20px',\n    borderRadius: '5px',\n    border: '1px solid #ccc',\n    boxSizing: 'border-box'\n  }\n};\nconst ListaClientes = () => {\n  _s();\n  const [clientes, setClientes] = useState([]);\n  const [formData, setFormData] = useState({\n    empresa: '',\n    rfc: '',\n    regimenFiscal: '',\n    moneda: '',\n    telefono: '',\n    correo: '',\n    imagenURL: null,\n    domicilio: '',\n    numeroExt: '',\n    numeroInt: '',\n    colonia: '',\n    codigoPostal: '',\n    ciudad: '',\n    estado: ''\n  });\n  const [modalIsOpen, setModalIsOpen] = useState(false); // Estado para controlar la apertura/cierre del modal\n  const [step, setStep] = useState(1); // Estado para controlar el paso del formulario\n  const [editingClientId, setEditingClientId] = useState(null);\n  const [editingFormData, setEditingFormData] = useState({});\n  useEffect(() => {\n    obtenerClientes();\n  }, []);\n  const obtenerClientes = async () => {\n    const clientesSnapshot = await getDocs(collection(db, 'clientes'));\n    const listaClientes = clientesSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setClientes(listaClientes);\n  };\n  const handleChange = e => {\n    if (step === 1) {\n      // Si estamos en el primer paso (agregar cliente), actualizamos el formData directamente\n      setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n      });\n    } else {\n      // Si estamos en el segundo paso (editar cliente), actualizamos el editingFormData\n      setEditingFormData({\n        ...editingFormData,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (step === 1) {\n      if (formData.empresa.trim() === '') {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'El campo \"Nombre de la Empresa\" es obligatorio!'\n        });\n        return;\n      }\n      setStep(2);\n    } else {\n      try {\n        const clienteData = {\n          ...formData\n        };\n        await addDoc(collection(db, 'clientes'), clienteData);\n        Swal.fire({\n          icon: 'success',\n          title: '¡Cliente registrado con éxito!',\n          showConfirmButton: false,\n          timer: 1000\n        }).then(() => {\n          setFormData({\n            empresa: '',\n            rfc: '',\n            regimenFiscal: '',\n            moneda: '',\n            telefono: '',\n            correo: '',\n            imagenURL: null,\n            domicilio: '',\n            numeroExt: '',\n            numeroInt: '',\n            colonia: '',\n            codigoPostal: '',\n            ciudad: '',\n            estado: ''\n          });\n          setStep(1);\n          obtenerClientes(); // Actualizar la lista de clientes después de agregar uno nuevo\n          setModalIsOpen(false); // Cerrar el modal después de enviar el formulario\n        });\n      } catch (error) {\n        console.error(\"Error al agregar cliente:\", error);\n      }\n    }\n  };\n  const handleUpdateClient = async e => {\n    e.preventDefault();\n    try {\n      await updateDoc(doc(db, 'clientes', editingClientId), editingFormData); // Actualizar los datos del cliente en la base de datos\n      Swal.fire({\n        icon: 'success',\n        title: '¡Cliente actualizado con éxito!',\n        showConfirmButton: false,\n        timer: 1000\n      });\n\n      // Actualizar el estado local de clientes\n      const updatedClients = clientes.map(cliente => cliente.id === editingClientId ? {\n        ...cliente,\n        ...editingFormData\n      } : cliente);\n      setClientes(updatedClients);\n      setModalIsOpen(false); // Cerrar el modal después de actualizar el cliente\n    } catch (error) {\n      console.error(\"Error al actualizar cliente:\", error);\n    }\n  };\n  const handleEditProduct = id => {\n    const clienteEdit = clientes.find(cliente => cliente.id === id);\n    setEditingClientId(id);\n    setEditingFormData(clienteEdit); // Establecer los datos del cliente para editar\n    setStep(1); // Cambiar al primer paso del formulario\n    setModalIsOpen(true);\n  };\n  const handleDeleteProduct = async id => {\n    // Mostrar la alerta de confirmación antes de eliminar el cliente\n    Swal.fire({\n      title: '¿Estás seguro?',\n      text: '¡No podrás revertir esto!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sí, eliminar'\n    }).then(async result => {\n      if (result.isConfirmed) {\n        try {\n          await deleteDoc(doc(db, 'clientes', id));\n          Swal.fire({\n            icon: 'success',\n            title: '¡Cliente eliminado con éxito!',\n            showConfirmButton: false,\n            timer: 1000\n          });\n          obtenerClientes(); // Actualizar la lista de clientes después de eliminar uno\n        } catch (error) {\n          console.error(\"Error al eliminar cliente:\", error);\n        }\n      }\n    });\n  };\n  const handleStep1Change = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        fontWeight: \"700\"\n      },\n      className: \"prices-button\",\n      onClick: () => setModalIsOpen(true),\n      children: \"+ Nuevo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => {\n        setModalIsOpen(false);\n        setEditingClientId(null); // Limpiar el ID del cliente en modo de edición al cerrar el modal\n        setEditingFormData({}); // Limpiar los datos del cliente en modo de edición al cerrar el modal\n        setStep(1); // Restablecer el paso al cerrar el modal\n      },\n      style: customStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          marginBottom: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalIsOpen(false),\n          style: {\n            border: \"none\",\n            background: \"none\",\n            cursor: \"pointer\",\n            fontSize: \"20px\"\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }, this), step === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Editar Cliente - Paso 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"client-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"empresa\",\n            placeholder: \"Nombre de la Empresa\",\n            value: formData.empresa,\n            onChange: handleStep1Change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"rfc\",\n            placeholder: \"RFC\",\n            value: formData.rfc,\n            onChange: handleStep1Change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"regimenFiscal\",\n            placeholder: \"R\\xE9gimen Fiscal\",\n            value: formData.regimenFiscal,\n            onChange: handleStep1Change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"moneda\",\n            placeholder: \"Moneda\",\n            value: formData.moneda,\n            onChange: handleStep1Change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"telefono\",\n            placeholder: \"Tel\\xE9fono\",\n            value: formData.telefono,\n            onChange: handleStep1Change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"correo\",\n            placeholder: \"Correo Electr\\xF3nico\",\n            value: formData.correo,\n            onChange: handleStep1Change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"imagen\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setStep(2),\n            children: \"Siguiente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true), step === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Editar Cliente - Paso 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdateClient,\n          className: \"client-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"domicilio\",\n            placeholder: \"Domicilio\",\n            value: editingFormData.domicilio,\n            onChange: e => setEditingFormData({\n              ...editingFormData,\n              domicilio: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"numeroExt\",\n            placeholder: \"No. Ext\",\n            value: editingFormData.numeroExt,\n            onChange: e => setEditingFormData({\n              ...editingFormData,\n              numeroExt: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"numeroInt\",\n            placeholder: \"No. Int\",\n            value: editingFormData.numeroInt,\n            onChange: e => setEditingFormData({\n              ...editingFormData,\n              numeroInt: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"colonia\",\n            placeholder: \"Colonia\",\n            value: editingFormData.colonia,\n            onChange: e => setEditingFormData({\n              ...editingFormData,\n              colonia: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"codigoPostal\",\n            placeholder: \"C.P.\",\n            value: editingFormData.codigoPostal,\n            onChange: e => setEditingFormData({\n              ...editingFormData,\n              codigoPostal: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"ciudad\",\n            placeholder: \"Ciudad\",\n            value: editingFormData.ciudad,\n            onChange: e => setEditingFormData({\n              ...editingFormData,\n              ciudad: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"estado\",\n            placeholder: \"Estado\",\n            value: editingFormData.estado,\n            onChange: e => setEditingFormData({\n              ...editingFormData,\n              estado: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Actualizar Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ClientsTable, {\n      clientes: clientes,\n      onEditProduct: handleEditProduct,\n      onDeleteProduct: handleDeleteProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 9\n  }, this);\n};\n_s(ListaClientes, \"bWyOZ15d6pnslydz3uIhZ/s1Rlw=\");\n_c = ListaClientes;\nexport default ListaClientes;\nvar _c;\n$RefreshReg$(_c, \"ListaClientes\");","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","deleteDoc","doc","updateDoc","db","Swal","Modal","ClientsTable","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","customStyles","content","top","left","transform","border","borderRadius","boxShadow","padding","maxWidth","width","maxHeight","overflow","fontFamily","label","display","marginBottom","input","boxSizing","ListaClientes","_s","clientes","setClientes","formData","setFormData","empresa","rfc","regimenFiscal","moneda","telefono","correo","imagenURL","domicilio","numeroExt","numeroInt","colonia","codigoPostal","ciudad","estado","modalIsOpen","setModalIsOpen","step","setStep","editingClientId","setEditingClientId","editingFormData","setEditingFormData","obtenerClientes","clientesSnapshot","listaClientes","docs","map","id","data","handleChange","e","target","name","value","handleSubmit","preventDefault","trim","fire","icon","title","text","clienteData","showConfirmButton","timer","then","error","console","handleUpdateClient","updatedClients","cliente","handleEditProduct","clienteEdit","find","handleDeleteProduct","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","handleStep1Change","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","className","onClick","isOpen","onRequestClose","justifyContent","background","cursor","fontSize","textAlign","onSubmit","type","placeholder","onChange","onEditProduct","onDeleteProduct","_c","$RefreshReg$"],"sources":["C:/Users/ALIENWARE/Documents/inventario-app/src/pages/lista-de-clientes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, addDoc, getDocs, deleteDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { db } from '../firebaseConfig';\r\nimport Swal from 'sweetalert2';\r\nimport Modal from 'react-modal';\r\nimport ClientsTable from '../components/ClientsTable';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        border: 'none',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n        padding: '20px',\r\n        maxWidth: '500px',\r\n        width: '100%',\r\n        maxHeight: '90vh',\r\n        overflow: 'auto',\r\n        fontFamily: 'Roboto, sans-serif', // Aplica la fuente Roboto\r\n    },\r\n    label: {\r\n        display: 'block',\r\n        marginBottom: '10px',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        padding: '8px',\r\n        marginBottom: '20px',\r\n        borderRadius: '5px',\r\n        border: '1px solid #ccc',\r\n        boxSizing: 'border-box',\r\n    },\r\n};\r\n\r\nconst ListaClientes = () => {\r\n    const [clientes, setClientes] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        empresa: '',\r\n        rfc: '',\r\n        regimenFiscal: '',\r\n        moneda: '',\r\n        telefono: '',\r\n        correo: '',\r\n        imagenURL: null,\r\n        domicilio: '',\r\n        numeroExt: '',\r\n        numeroInt: '',\r\n        colonia: '',\r\n        codigoPostal: '',\r\n        ciudad: '',\r\n        estado: ''\r\n    });\r\n    const [modalIsOpen, setModalIsOpen] = useState(false); // Estado para controlar la apertura/cierre del modal\r\n    const [step, setStep] = useState(1); // Estado para controlar el paso del formulario\r\n    const [editingClientId, setEditingClientId] = useState(null);\r\n    const [editingFormData, setEditingFormData] = useState({});\r\n\r\n    useEffect(() => {\r\n        obtenerClientes();\r\n    }, []);\r\n\r\n    const obtenerClientes = async () => {\r\n        const clientesSnapshot = await getDocs(collection(db, 'clientes'));\r\n        const listaClientes = clientesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n        setClientes(listaClientes);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if (step === 1) {\r\n            // Si estamos en el primer paso (agregar cliente), actualizamos el formData directamente\r\n            setFormData({\r\n                ...formData,\r\n                [e.target.name]: e.target.value\r\n            });\r\n        } else {\r\n            // Si estamos en el segundo paso (editar cliente), actualizamos el editingFormData\r\n            setEditingFormData({\r\n                ...editingFormData,\r\n                [e.target.name]: e.target.value\r\n            });\r\n        }\r\n    };\r\n    \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (step === 1) {\r\n            if (formData.empresa.trim() === '') {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'El campo \"Nombre de la Empresa\" es obligatorio!'\r\n                });\r\n                return;\r\n            }\r\n            setStep(2);\r\n        } else {\r\n            try {\r\n                const clienteData = { ...formData };\r\n                await addDoc(collection(db, 'clientes'), clienteData);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: '¡Cliente registrado con éxito!',\r\n                    showConfirmButton: false,\r\n                    timer: 1000\r\n                }).then(() => {\r\n                    setFormData({\r\n                        empresa: '',\r\n                        rfc: '',\r\n                        regimenFiscal: '',\r\n                        moneda: '',\r\n                        telefono: '',\r\n                        correo: '',\r\n                        imagenURL: null,\r\n                        domicilio: '',\r\n                        numeroExt: '',\r\n                        numeroInt: '',\r\n                        colonia: '',\r\n                        codigoPostal: '',\r\n                        ciudad: '',\r\n                        estado: ''\r\n                    });\r\n                    setStep(1);\r\n                    obtenerClientes(); // Actualizar la lista de clientes después de agregar uno nuevo\r\n                    setModalIsOpen(false); // Cerrar el modal después de enviar el formulario\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error al agregar cliente:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUpdateClient = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await updateDoc(doc(db, 'clientes', editingClientId), editingFormData); // Actualizar los datos del cliente en la base de datos\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: '¡Cliente actualizado con éxito!',\r\n                showConfirmButton: false,\r\n                timer: 1000\r\n            });\r\n    \r\n            // Actualizar el estado local de clientes\r\n            const updatedClients = clientes.map(cliente =>\r\n                cliente.id === editingClientId ? { ...cliente, ...editingFormData } : cliente\r\n            );\r\n            setClientes(updatedClients);\r\n    \r\n            setModalIsOpen(false); // Cerrar el modal después de actualizar el cliente\r\n        } catch (error) {\r\n            console.error(\"Error al actualizar cliente:\", error);\r\n        }\r\n    };\r\n    \r\n    \r\n    const handleEditProduct = (id) => {\r\n        const clienteEdit = clientes.find(cliente => cliente.id === id);\r\n        setEditingClientId(id);\r\n        setEditingFormData(clienteEdit); // Establecer los datos del cliente para editar\r\n        setStep(1); // Cambiar al primer paso del formulario\r\n        setModalIsOpen(true);\r\n    };    \r\n\r\n    const handleDeleteProduct = async (id) => {\r\n        // Mostrar la alerta de confirmación antes de eliminar el cliente\r\n        Swal.fire({\r\n            title: '¿Estás seguro?',\r\n            text: '¡No podrás revertir esto!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                try {\r\n                    await deleteDoc(doc(db, 'clientes', id));\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: '¡Cliente eliminado con éxito!',\r\n                        showConfirmButton: false,\r\n                        timer: 1000\r\n                    });\r\n                    obtenerClientes(); // Actualizar la lista de clientes después de eliminar uno\r\n                } catch (error) {\r\n                    console.error(\"Error al eliminar cliente:\", error);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleStep1Change = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Lista de Clientes</h1>\r\n            <button style={{fontWeight: \"700\"}} className=\"prices-button\" onClick={() => setModalIsOpen(true)}>+ Nuevo</button>\r\n            <Modal\r\n    isOpen={modalIsOpen}\r\n    onRequestClose={() => {\r\n        setModalIsOpen(false);\r\n        setEditingClientId(null); // Limpiar el ID del cliente en modo de edición al cerrar el modal\r\n        setEditingFormData({}); // Limpiar los datos del cliente en modo de edición al cerrar el modal\r\n        setStep(1); // Restablecer el paso al cerrar el modal\r\n    }}\r\n    style={customStyles}\r\n>\r\n    <div style={{ display: \"flex\", justifyContent: \"flex-end\", marginBottom: \"20px\" }}>\r\n        <button onClick={() => setModalIsOpen(false)} style={{ border: \"none\", background: \"none\", cursor: \"pointer\", fontSize: \"20px\" }}>X</button>\r\n    </div>\r\n    {step === 1 && (\r\n    <>  \r\n        <h2 style={{textAlign: \"center\"}}>Editar Cliente - Paso 1</h2>\r\n        <form onSubmit={handleSubmit} className=\"client-form\">\r\n            <input type=\"text\" name=\"empresa\" placeholder=\"Nombre de la Empresa\" value={formData.empresa} onChange={handleStep1Change} />\r\n            <input type=\"text\" name=\"rfc\" placeholder=\"RFC\" value={formData.rfc} onChange={handleStep1Change} />\r\n            <input type=\"text\" name=\"regimenFiscal\" placeholder=\"Régimen Fiscal\" value={formData.regimenFiscal} onChange={handleStep1Change} />\r\n            <input type=\"text\" name=\"moneda\" placeholder=\"Moneda\" value={formData.moneda} onChange={handleStep1Change} />\r\n            <input type=\"text\" name=\"telefono\" placeholder=\"Teléfono\" value={formData.telefono} onChange={handleStep1Change} />\r\n            <input type=\"email\" name=\"correo\" placeholder=\"Correo Electrónico\" value={formData.correo} onChange={handleStep1Change} />\r\n            <input type=\"file\" name=\"imagen\" onChange={handleChange} />\r\n\r\n            <button type=\"button\" onClick={() => setStep(2)}>Siguiente</button>\r\n\r\n        </form>\r\n    </>\r\n)}\r\n    {step === 2 && (\r\n        <>\r\n            <h2 style={{textAlign: \"center\"}}>Editar Cliente - Paso 2</h2>\r\n            <form onSubmit={handleUpdateClient} className=\"client-form\">\r\n                <input type=\"text\" name=\"domicilio\" placeholder=\"Domicilio\" value={editingFormData.domicilio} onChange={(e) => setEditingFormData({...editingFormData, domicilio: e.target.value})} />\r\n                <input type=\"text\" name=\"numeroExt\" placeholder=\"No. Ext\" value={editingFormData.numeroExt} onChange={(e) => setEditingFormData({...editingFormData, numeroExt: e.target.value})} />\r\n                <input type=\"text\" name=\"numeroInt\" placeholder=\"No. Int\" value={editingFormData.numeroInt} onChange={(e) => setEditingFormData({...editingFormData, numeroInt: e.target.value})} />\r\n                <input type=\"text\" name=\"colonia\" placeholder=\"Colonia\" value={editingFormData.colonia} onChange={(e) => setEditingFormData({...editingFormData, colonia: e.target.value})} />\r\n                <input type=\"text\" name=\"codigoPostal\" placeholder=\"C.P.\" value={editingFormData.codigoPostal} onChange={(e) => setEditingFormData({...editingFormData, codigoPostal: e.target.value})} />\r\n                <input type=\"text\" name=\"ciudad\" placeholder=\"Ciudad\" value={editingFormData.ciudad} onChange={(e) => setEditingFormData({...editingFormData, ciudad: e.target.value})} />\r\n                <input type=\"text\" name=\"estado\" placeholder=\"Estado\" value={editingFormData.estado} onChange={(e) => setEditingFormData({...editingFormData, estado: e.target.value})} />\r\n                <button type=\"submit\">Actualizar Cliente</button>\r\n            </form>\r\n        </>\r\n    )}\r\n</Modal>\r\n            <ClientsTable clientes={clientes} onEditProduct={handleEditProduct} onDeleteProduct={handleDeleteProduct} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListaClientes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}