{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALIENWARE\\\\Documents\\\\inventario-app\\\\src\\\\components\\\\ProductButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { doc, updateDoc } from 'firebase/firestore';\nimport db from '../firebaseConfig';\nimport Swal from 'sweetalert2';\n\n// Establece la función de inicialización de react-modal para evitar un aviso de desenfoque de accesibilidad\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    border: 'none',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    padding: '20px',\n    maxWidth: '400px',\n    width: '100%',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    fontFamily: 'Roboto, sans-serif' // Aplica la fuente Roboto\n  },\n  label: {\n    display: 'block',\n    marginBottom: '10px'\n  },\n  input: {\n    width: '100%',\n    padding: '8px',\n    marginBottom: '20px',\n    borderRadius: '5px',\n    border: '1px solid #ccc',\n    boxSizing: 'border-box'\n  },\n  button: {\n    width: '50%',\n    // Centra el botón de agregar\n    padding: '10px',\n    borderRadius: '5px',\n    backgroundColor: '#3085d6',\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer',\n    fontSize: '16px',\n    display: 'flex',\n    justifyContent: 'center',\n    margin: \"0 auto\"\n  }\n};\nconst ProductButton = ({\n  products,\n  setProducts\n}) => {\n  _s();\n  const [percentage, setPercentage] = useState(10);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const updatePrices = async increase => {\n    // Muestra un mensaje de confirmación con SweetAlert\n    const result = await Swal.fire({\n      title: '¿Estás seguro?',\n      text: \"Estás a punto de \" + (increase ? \"aumentar\" : \"disminuir\") + \" los precios.\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sí, ¡hazlo!',\n      cancelButtonText: 'No, cancelar'\n    });\n    if (result.isConfirmed) {\n      const adjustFactor = parseFloat((1 + (increase ? percentage : -percentage) / 100).toFixed(2));\n      const updatePromises = products.map(product => {\n        const newCost = parseFloat((product.costo * adjustFactor).toFixed(2));\n        const productRef = doc(db, \"productos\", product.id);\n        return updateDoc(productRef, {\n          costo: newCost\n        });\n      });\n      try {\n        // Espera a que todas las actualizaciones se completen\n        await Promise.all(updatePromises);\n\n        // Muestra un mensaje de éxito con SweetAlert\n        Swal.fire({\n          title: '¡Éxito!',\n          text: 'Precios actualizados correctamente en Firebase.',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        });\n      } catch (error) {\n        console.error('Error al actualizar precios en Firebase:', error);\n\n        // Muestra un mensaje de error con SweetAlert\n        Swal.fire({\n          title: 'Error',\n          text: 'Ocurrió un error al actualizar los precios.',\n          icon: 'error',\n          confirmButtonText: 'OK'\n        });\n      }\n    } else {\n      // Acción cancelada\n      Swal.fire({\n        title: 'Cancelado',\n        text: 'Los cambios en los precios han sido cancelados.',\n        icon: 'info',\n        confirmButtonText: 'OK'\n      });\n    }\n\n    // Cierra el modal una vez completada la actualización o cancelación\n    setModalIsOpen(false);\n  };\n  const handlePercentageChange = e => {\n    let newValue = e.target.value;\n    // Si el nuevo valor es igual a cero, reemplazarlo por una cadena vacía\n    if (newValue === '0') {\n      newValue = '';\n    }\n    setPercentage(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '20px',\n      right: '100px',\n      zIndex: '9999'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"prices-button\",\n      onClick: () => setModalIsOpen(true),\n      children: \"Ajustar precios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      style: {\n        ...customStyles,\n        content: {\n          ...customStyles.content,\n          width: '50%'\n        }\n      },\n      contentLabel: \"Ajuste de Precios\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close\",\n        onClick: () => setModalIsOpen(false),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Editar Ajuste de Precios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: customStyles.label,\n        children: [\"Porcentaje:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: percentage,\n          onChange: handlePercentageChange,\n          style: customStyles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-apply-button\",\n        onClick: () => updatePrices(true),\n        children: \"Aumentar Precio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-apply-button\",\n        onClick: () => updatePrices(false),\n        children: \"Disminuir Precio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductButton, \"OtbOtont+dJamtsMy0LrZIUjxI0=\");\n_c = ProductButton;\nexport default ProductButton;\nvar _c;\n$RefreshReg$(_c, \"ProductButton\");","map":{"version":3,"names":["React","useState","Modal","doc","updateDoc","db","Swal","jsxDEV","_jsxDEV","setAppElement","customStyles","content","top","left","transform","border","borderRadius","boxShadow","padding","maxWidth","width","maxHeight","overflow","fontFamily","label","display","marginBottom","input","boxSizing","button","backgroundColor","color","cursor","fontSize","justifyContent","margin","ProductButton","products","setProducts","_s","percentage","setPercentage","modalIsOpen","setModalIsOpen","updatePrices","increase","result","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirmed","adjustFactor","parseFloat","toFixed","updatePromises","map","product","newCost","costo","productRef","id","Promise","all","error","console","handlePercentageChange","e","newValue","target","value","style","position","right","zIndex","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","contentLabel","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/ALIENWARE/Documents/inventario-app/src/components/ProductButton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { doc, updateDoc } from 'firebase/firestore';\r\nimport db from '../firebaseConfig';\r\nimport Swal from 'sweetalert2';\r\n\r\n// Establece la función de inicialización de react-modal para evitar un aviso de desenfoque de accesibilidad\r\nModal.setAppElement('#root');\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n    padding: '20px',\r\n    maxWidth: '400px',\r\n    width: '100%',\r\n    maxHeight: '90vh',\r\n    overflow: 'auto',\r\n    fontFamily: 'Roboto, sans-serif', // Aplica la fuente Roboto\r\n  },\r\n  label: {\r\n    display: 'block',\r\n    marginBottom: '10px',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '8px',\r\n    marginBottom: '20px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n    boxSizing: 'border-box',\r\n  },\r\n  button: {\r\n    width: '50%', // Centra el botón de agregar\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    backgroundColor: '#3085d6',\r\n    color: '#fff',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    fontSize: '16px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: \"0 auto\"\r\n  },\r\n};\r\n\r\nconst ProductButton = ({ products, setProducts }) => {\r\n  const [percentage, setPercentage] = useState(10);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const updatePrices = async (increase) => {\r\n    // Muestra un mensaje de confirmación con SweetAlert\r\n    const result = await Swal.fire({\r\n      title: '¿Estás seguro?',\r\n      text: \"Estás a punto de \" + (increase ? \"aumentar\" : \"disminuir\") + \" los precios.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Sí, ¡hazlo!',\r\n      cancelButtonText: 'No, cancelar'\r\n    });\r\n  \r\n    if (result.isConfirmed) {\r\n      const adjustFactor = parseFloat((1 + (increase ? percentage : -percentage) / 100).toFixed(2));\r\n    \r\n      const updatePromises = products.map(product => {\r\n        const newCost = parseFloat((product.costo * adjustFactor).toFixed(2));\r\n        const productRef = doc(db, \"productos\", product.id);\r\n        return updateDoc(productRef, { costo: newCost });\r\n      });\r\n    \r\n      try {\r\n        // Espera a que todas las actualizaciones se completen\r\n        await Promise.all(updatePromises);\r\n        \r\n        // Muestra un mensaje de éxito con SweetAlert\r\n        Swal.fire({\r\n          title: '¡Éxito!',\r\n          text: 'Precios actualizados correctamente en Firebase.',\r\n          icon: 'success',\r\n          confirmButtonText: 'OK'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error al actualizar precios en Firebase:', error);\r\n        \r\n        // Muestra un mensaje de error con SweetAlert\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'Ocurrió un error al actualizar los precios.',\r\n          icon: 'error',\r\n          confirmButtonText: 'OK'\r\n        });\r\n      }\r\n    } else {\r\n      // Acción cancelada\r\n      Swal.fire({\r\n        title: 'Cancelado',\r\n        text: 'Los cambios en los precios han sido cancelados.',\r\n        icon: 'info',\r\n        confirmButtonText: 'OK'\r\n      });\r\n    }\r\n  \r\n    // Cierra el modal una vez completada la actualización o cancelación\r\n    setModalIsOpen(false);\r\n  };\r\n  \r\n  const handlePercentageChange = (e) => {\r\n    let newValue = e.target.value;\r\n    // Si el nuevo valor es igual a cero, reemplazarlo por una cadena vacía\r\n    if (newValue === '0') {\r\n      newValue = '';\r\n    }\r\n    setPercentage(newValue);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'fixed', top: '20px', right: '100px', zIndex: '9999' }}>\r\n      <button className=\"prices-button\" onClick={() => setModalIsOpen(true)}>Ajustar precios</button>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        style={{...customStyles, content: { ...customStyles.content, width: '50%' }}}\r\n        contentLabel=\"Ajuste de Precios\"\r\n      >\r\n        <button className=\"modal-close\" onClick={() => setModalIsOpen(false)}>x</button>\r\n        <h2>Editar Ajuste de Precios</h2>\r\n        <label style={customStyles.label}>\r\n          Porcentaje:\r\n          <input type=\"number\" value={percentage} onChange={handlePercentageChange} style={customStyles.input} />\r\n        </label>\r\n        <button className=\"modal-apply-button\" onClick={() => updatePrices(true)}>Aumentar Precio</button>\r\n        <button className=\"modal-apply-button\" onClick={() => updatePrices(false)}>Disminuir Precio</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}